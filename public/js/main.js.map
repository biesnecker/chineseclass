{"version":3,"sources":["webpack://chineseclass/./client/pinyin.js","webpack://chineseclass/./client/main.js"],"names":["pinyinVowelsRe","pinyinVowelOrder","a","o","e","i","u","v","pinyinReplacements","isLocalhost","includes","window","location","hostname","randomInteger","max","Math","floor","random","updateStats","elem","stats","percent","attempted","correct","innerHTML","toFixed","document","addEventListener","elements","datatable","getElementById","character","pinyin","audio","options","navigator","platform","userAgent","classList","remove","mode","flashcards","ts","Date","now","fetch","then","response","json","jd","forEach","element","push","recent","recent_max_size","min","length","recent_set","Set","recent_next_insert","right_answer_idx","next_card","card","card_idx","finished","n","delete","idx","has","add","alternate_definitions","alternate_idx","size","filename","trim","split","map","syllable","last_letter","charAt","tone","parseInt","toneless","slice","m","match","vowels","index","lowest","lowest_idx","vo","replaced_char","substr","join","setAttribute","play","alts","values","definition","next","value","audio_click_handler","preventDefault","hasAttribute","option_id","setTimeout"],"mappings":"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","file":"main.js","sourcesContent":["const pinyinVowelsRe = /[aeiouv]{1,2}/;\n\nconst pinyinVowelOrder = {\n  a: 0,\n  o: 1,\n  e: 2,\n  i: 3,\n  u: 4,\n  v: 5,\n};\n\nconst pinyinReplacements = {\n  a: [\"ā\", \"á\", \"ǎ\", \"à\"],\n  e: [\"ē\", \"é\", \"ě\", \"è\"],\n  o: [\"ō\", \"ó\", \"ǒ\", \"ò\"],\n  u: [\"ū\", \"ú\", \"ǔ\", \"ù\"],\n  i: [\"ī\", \"í\", \"ǐ\", \"ì\"],\n  v: [\"ǖ\", \"ǘ\", \"ǚ\", \"ǜ\"],\n};\n\nconst transformPinyin = (pinyin) => {\n  const transformed = pinyin\n    .trim()\n    .split(\" \")\n    .map((syllable) => {\n      const last_letter = syllable.charAt(syllable.length - 1);\n      const tone =\n        last_letter >= \"0\" && last_letter <= \"9\"\n          ? parseInt(last_letter, 10)\n          : 0;\n      if (tone === 0) {\n        return syllable;\n      }\n\n      const toneless = syllable.slice(0, -1);\n\n      if (tone < 1 || tone > 4) {\n        return toneless;\n      }\n\n      const m = toneless.match(pinyinVowelsRe);\n      if (m === null) {\n        // If it doesn't have vowels, bail.\n        return syllable;\n      }\n\n      const vowels = m[0];\n      let idx = 0;\n      if (vowels.length === 1) {\n        idx = m.index;\n      } else if (vowels === \"iu\" || vowels === \"ui\") {\n        // The final vowel.\n        idx = m.index + 1;\n      } else {\n        // Use vowel precedence.\n        let lowest = 6;\n        let lowest_idx = 0;\n        for (let i = 0; i < vowels.length; ++i) {\n          const vo = pinyinVowelOrder[vowels[i]];\n          if (vo < lowest) {\n            lowest = vo;\n            lowest_idx = i;\n          }\n        }\n        idx = m.index + lowest_idx;\n      }\n\n      const replaced_char = toneless.charAt(idx);\n      const replaced =\n        toneless.substr(0, idx) +\n        pinyinReplacements[replaced_char][tone - 1] +\n        toneless.substr(idx + 1);\n\n      return replaced;\n    });\n  return transformed.join(\" \");\n};\n\nexport default transformPinyin;\n","import transformPinyin from \"./pinyin\";\n\nconst isLocalhost = [\"localhost\", \"127.0.0.1\", \"\"].includes(\n  window.location.hostname\n);\n\nconst isIOS = () => {\n  return (\n    [\n      \"iPad Simulator\",\n      \"iPhone Simulator\",\n      \"iPod Simulator\",\n      \"iPad\",\n      \"iPhone\",\n      \"iPod\",\n    ].includes(navigator.platform) ||\n    // iPad on iOS 13 detection\n    (navigator.userAgent.includes(\"Mac\") && \"ontouchend\" in document)\n  );\n};\n\nconst randomInteger = (max) => {\n  return Math.floor(Math.random() * max);\n};\n\nconst updateStats = (elem, stats) => {\n  let percent = 0.0;\n  if (stats.attempted != 0) {\n    percent = stats.correct / stats.attempted;\n  }\n  elem.innerHTML = `${stats.correct} / ${stats.attempted} (${(\n    percent * 100\n  ).toFixed(2)}%)`;\n};\n\nconst audioPath = (filename) => {\n  if (isLocalhost) {\n    return `audio/${filename}`;\n  } else {\n    return `https://d25j8baqrvaujh.cloudfront.net/${filename}`;\n  }\n};\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const elements = {\n    datatable: document.getElementById(\"datatable\"),\n    character: document.getElementById(\"character\"),\n    pinyin: document.getElementById(\"pinyin\"),\n    stats: document.getElementById(\"stats\"),\n    audio: document.getElementById(\"audiosource\"),\n    options: [\n      document.getElementById(\"option_0\"),\n      document.getElementById(\"option_1\"),\n      document.getElementById(\"option_2\"),\n      document.getElementById(\"option_3\"),\n    ],\n  };\n\n  // If it's iOS, remove the use_hover class from body.\n  if (isIOS()) {\n    datatable.classList.remove(\"use_hover\");\n  }\n\n  let stats = {\n    correct: 0,\n    attempted: 0,\n  };\n\n  let mode = 0;\n  let flashcards = [];\n\n  const ts = Math.floor(Date.now() / 1000);\n\n  fetch(`data.json?ts=${ts}`)\n    .then((response) => response.json())\n    .then((jd) => {\n      jd.forEach((element) => flashcards.push(element));\n\n      updateStats(elements.stats, stats);\n\n      let recent = [];\n      const recent_max_size = Math.min(\n        Math.max(Math.floor(flashcards.length / 2), 1),\n        20\n      );\n      let recent_set = new Set();\n      let recent_next_insert = 0;\n      for (let i = 0; i < recent_max_size; ++i) {\n        recent.push(null);\n      }\n\n      let right_answer_idx = 0;\n\n      const next_card = () => {\n        let card;\n        let card_idx;\n        let finished = false;\n        if (recent[recent_next_insert] != null) {\n          const n = recent[recent_next_insert];\n          recent_set.delete(n);\n          recent[recent_next_insert] = null;\n        }\n\n        while (!finished) {\n          const idx = randomInteger(flashcards.length);\n          if (recent_set.has(idx)) {\n            continue;\n          }\n          card = flashcards[idx];\n          recent[recent_next_insert] = idx;\n          recent_next_insert = recent_next_insert + 1;\n          recent_next_insert %= recent_max_size;\n          card_idx = idx;\n          recent_set.add(idx);\n          finished = true;\n        }\n\n        let alternate_definitions = new Set();\n        let alternate_idx = 0;\n        finished = false;\n        while (alternate_definitions.size < 3) {\n          alternate_idx = randomInteger(flashcards.length);\n          if (\n            alternate_idx === card_idx ||\n            alternate_definitions.has(alternate_idx) ||\n            recent_set.has(alternate_idx)\n          ) {\n            continue;\n          }\n          alternate_definitions.add(alternate_idx);\n        }\n\n        elements.character.innerHTML = card.character;\n        elements.pinyin.innerHTML = transformPinyin(card.pinyin);\n        elements.audio.setAttribute(\"src\", audioPath(card.audio));\n        elements.audio.play();\n\n        // This index is where the correct answer goes. The other indexes\n        // get set with one of the alternate indexes.\n        const alts = alternate_definitions.values();\n        right_answer_idx = randomInteger(4);\n        for (let i = 0; i < 4; ++i) {\n          if (i === right_answer_idx) {\n            elements.options[i].innerHTML = card.definition;\n          } else {\n            elements.options[i].innerHTML =\n              flashcards[alts.next().value].definition;\n          }\n        }\n      };\n\n      const click_handler = (option_id) => {\n        const h = (e) => {\n          e.preventDefault();\n          if (mode === 1) {\n            return;\n          }\n          mode = 1;\n          elements.datatable.classList.add(\"answer_mode\");\n          elements.options[right_answer_idx].classList.add(\"correct\");\n          stats.attempted += 1;\n          const correct = option_id === right_answer_idx;\n          if (correct) {\n            stats.correct += 1;\n          } else {\n            elements.options[option_id].classList.add(\"incorrect\");\n          }\n          updateStats(elements.stats, stats);\n          setTimeout(\n            () => {\n              mode = 0;\n              elements.datatable.classList.remove(\"answer_mode\");\n              elements.datatable.classList.add(\"normal_mode\");\n              elements.options[right_answer_idx].classList.remove(\"correct\");\n              elements.options[option_id].classList.remove(\"incorrect\");\n              next_card();\n            },\n            correct ? 750 : 1500\n          );\n        };\n        return h;\n      };\n\n      const audio_click_handler = (e) => {\n        e.preventDefault();\n        if (mode === 0 && elements.audio.hasAttribute(\"src\")) {\n          elements.audio.play();\n        }\n      };\n\n      [elements.character, elements.pinyin].forEach((elem) =>\n        elem.addEventListener(\"click\", audio_click_handler)\n      );\n\n      elements.options.forEach((elem, i) =>\n        elem.addEventListener(\"click\", click_handler(i))\n      );\n\n      next_card();\n    });\n});\n"],"sourceRoot":""}